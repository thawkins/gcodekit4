//! G-Code Visualizer Panel
//! Displays a 3D visualization of the loaded G-Code toolpath
//! Shows machine position, bounding box, and real-time tool movement

import { ScrollView, VerticalBox, HorizontalBox, Button, GridBox, CheckBox } from "std-widgets.slint";

export component GcodeVisualizerPanel inherits VerticalBox {
    spacing: 0px;
    horizontal-stretch: 1.0;
    vertical-stretch: 1.0;

    in property <string> gcode-filename: "untitled.gcode";
    in property <string> gcode-content: "";
    in property <image> visualization-image;
    in property <string> machine-x: "0.000";
    in property <string> machine-y: "0.000";
    in property <string> machine-z: "0.000";
    in property <string> work-x: "0.000";
    in property <string> work-y: "0.000";
    in property <string> work-z: "0.000";
    in property <float> progress: 0.0;
    in property <string> visualizer-status: "Ready";
    in property <float> x-offset: 0.0;
    in property <float> y-offset: 0.0;
    in property <float> zoom-scale: 1.0;
    in-out property <bool> show-grid: true;
    
    callback refresh-visualization();
    callback zoom-in();
    callback zoom-out();
    callback fit-to-view();
    callback reset-view();
    callback pan-left();
    callback pan-right();
    callback pan-up();
    callback pan-down();
    callback toggle-grid();

    VerticalBox {
        spacing: 4px;
        padding: 6px;

        // Toolbar - all controls on one line
        HorizontalBox {
            min-height: 50px;
            spacing: 8px;
            vertical-stretch: 0;

            // Left side - main controls
            HorizontalBox {
                spacing: 8px;
                alignment: start;
                vertical-stretch: 0;

                Text {
                    text: "Visualization Controls:";
                    font-weight: 700;
                    font-size: 12px;
                    color: #2c3e50;
                    vertical-alignment: center;
                }

                Button {
                    text: "🔄 Refresh";
                    width: 100px;
                    clicked => {
                        root.refresh-visualization();
                    }
                }

                Button {
                    text: "🔍+ Zoom In";
                    width: 100px;
                    clicked => {
                        root.zoom-in();
                    }
                }

                Button {
                    text: "🔍- Zoom Out";
                    width: 100px;
                    clicked => {
                        root.zoom-out();
                    }
                }

                Button {
                    text: "⊡ Fit";
                    width: 80px;
                    clicked => {
                        root.fit-to-view();
                    }
                }

                Button {
                    text: "↺ Reset";
                    width: 80px;
                    clicked => {
                        root.reset-view();
                    }
                }
            }

            // Spacer to push pan controls to the right
            Rectangle {
                horizontal-stretch: 1.0;
            }

            // Right side - pan controls
            HorizontalBox {
                spacing: 8px;
                alignment: end;
                vertical-stretch: 0;

                Text {
                    text: "Pan:";
                    font-weight: 700;
                    font-size: 12px;
                    color: #2c3e50;
                    vertical-alignment: center;
                }

                Button {
                    text: "← Left";
                    width: 80px;
                    clicked => {
                        root.pan-left();
                    }
                }

                Button {
                    text: "→ Right";
                    width: 80px;
                    clicked => {
                        root.pan-right();
                    }
                }

                Button {
                    text: "↑ Up";
                    width: 80px;
                    clicked => {
                        root.pan-up();
                    }
                }

                Button {
                    text: "↓ Down";
                    width: 80px;
                    clicked => {
                        root.pan-down();
                    }
                }
            }
        }

        // Status display - single line (outside ScrollView)
        HorizontalBox {
            spacing: 12px;
            padding-left: 10px;
            padding-right: 10px;
            padding-top: 4px;
            padding-bottom: 4px;
            alignment: start;
            min-height: 25px;
            vertical-stretch: 0;

            // Zoom Scale
            HorizontalBox {
                spacing: 6px;
                
                Text {
                    text: "Zoom:";
                    font-size: 11px;
                    font-weight: 700;
                    color: #2e7d32;
                }

                Text {
                    text: Math.round(root.zoom-scale * 1000.0) / 10.0 + "%";
                    font-size: 11px;
                    font-weight: 700;
                    color: #1b5e20;
                }

                Text {
                    text: "(" + Math.round(root.zoom-scale * 100.0) / 100.0 + "x)";
                    font-size: 10px;
                    color: #2e7d32;
                }
            }

            Text {
                text: "|";
                font-size: 11px;
                color: #ccc;
            }

            // X Offset
            HorizontalBox {
                spacing: 6px;

                Text {
                    text: "X Offset:";
                    font-size: 11px;
                    font-weight: 700;
                    color: #1565c0;
                }

                Text {
                    text: Math.round(root.x-offset * 10.0) / 10.0 + " mm";
                    font-size: 11px;
                    font-weight: 700;
                    color: #0d47a1;
                }
            }

            Text {
                text: "|";
                font-size: 11px;
                color: #ccc;
            }

            // Y Offset
            HorizontalBox {
                spacing: 6px;

                Text {
                    text: "Y Offset:";
                    font-size: 11px;
                    font-weight: 700;
                    color: #6a1b9a;
                }

                Text {
                    text: Math.round(root.y-offset * 10.0) / 10.0 + " mm";
                    font-size: 11px;
                    font-weight: 700;
                    color: #4a148c;
                }
            }

            // Spacer to push grid checkbox to the right
            Rectangle {
                horizontal-stretch: 1.0;
            }

            // Grid toggle checkbox
            HorizontalBox {
                spacing: 6px;
                alignment: end;

                CheckBox {
                    text: "Show Grid";
                    checked <=> root.show-grid;
                    toggled => {
                        root.toggle-grid();
                    }
                }
            }
        }

        // Main visualization area with scrollview
        ScrollView {
            VerticalBox {
                padding: 10px;
                spacing: 6px;
                alignment: center;

                    // 2D Visualizer - Rendered Toolpath
                    Rectangle {
                        width: 100%;
                        height: 500px;
                        background: #f5f5f5;
                        border-width: 2px;
                        border-color: #000;
                        border-radius: 4px;
                        
                        if root.gcode-content != "" && root.visualization-image.width > 0 : Image {
                            source: root.visualization-image;
                            x: 2px;
                            y: 2px;
                            width: parent.width - 4px;
                            height: parent.height - 4px;
                        }
                    }
                }
            }
        }
    }
