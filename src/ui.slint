// GCodeKit4 Main UI
// Universal G-Code Sender for CNC Machines

import { Button, ComboBox, LineEdit, TextEdit, VerticalBox, HorizontalBox, ScrollView, SpinBox } from "std-widgets.slint";

export struct PortInfo {
    port: string,
    description: string,
}

export component MainWindow inherits Window {
    width: 1200px;
    height: 850px;
    
    title: "GCodeKit4 - Universal G-Code Sender";
    
    // Dynamic properties exposed to Rust
    in property <[string]> available-ports: [];
    in-out property <string> selected-port: "";
    in property <bool> connected: false;
    in property <string> connection-status: "Disconnected";
    in property <string> device-version: "Unknown";
    in property <float> position-x: 0.0;
    in property <float> position-y: 0.0;
    in property <float> position-z: 0.0;
    in property <string> machine-state: "DISCONNECTED";
    out property <int> selected-baud: 115200;
    
    callback refresh-ports();
    callback connect(string, int);
    callback disconnect();
    
    // Internal state for UI selections
    private property <int> port-index: 0;
    private property <int> baud-index: 3;  // Default to 115200
    
    VerticalBox {
        spacing: 0px;
        
        // Menu bar placeholder
        HorizontalBox {
            height: 40px;
            padding: 5px;
            Rectangle {
                background: #2c3e50;
            }
            Text {
                text: "GCodeKit4 v0.7.0-alpha";
                color: white;
                font-weight: 700;
            }
        }
        
        // Main content area
        HorizontalBox {
            spacing: 10px;
            padding: 10px;
            
            // Left panel - Connection and Control
            VerticalBox {
                width: 300px;
                spacing: 10px;
                
                // Connection Panel
                Rectangle {
                    background: #ecf0f1;
                    VerticalBox {
                        padding: 10px;
                        spacing: 8px;
                        
                        Text {
                            text: "Connection";
                            font-weight: 700;
                            font-size: 14px;
                        }
                        
                        HorizontalBox {
                            Text { text: "Port:"; width: 50px; }
                            port-combo := ComboBox {
                                model: root.available-ports;
                                current-index: port-index;
                                selected => {
                                    port-index = port-combo.current-index;
                                    if (port-combo.current-index >= 0 && port-combo.current-index < root.available-ports.length) {
                                        root.selected-port = root.available-ports[port-combo.current-index];
                                    }
                                }
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "Baud:"; width: 50px; }
                            baud-combo := ComboBox {
                                model: ["9600", "19200", "38400", "57600", "115200", "230400"];
                                current-index: baud-index;
                                selected => {
                                    baud-index = baud-combo.current-index;
                                    if (baud-combo.current-index == 0) { root.selected-baud = 9600; }
                                    else if (baud-combo.current-index == 1) { root.selected-baud = 19200; }
                                    else if (baud-combo.current-index == 2) { root.selected-baud = 38400; }
                                    else if (baud-combo.current-index == 3) { root.selected-baud = 57600; }
                                    else if (baud-combo.current-index == 4) { root.selected-baud = 115200; }
                                    else if (baud-combo.current-index == 5) { root.selected-baud = 230400; }
                                }
                            }
                        }
                        
                        HorizontalBox {
                            spacing: 5px;
                            Button {
                                text: root.connected ? "Disconnect" : "Connect";
                                width: 50%;
                                clicked => {
                                    if (root.connected) {
                                        root.disconnect();
                                    } else {
                                        root.connect(root.selected-port, root.selected-baud);
                                    }
                                }
                            }
                            Button {
                                text: "Refresh";
                                width: 50%;
                                clicked => { root.refresh-ports(); }
                            }
                        }
                    }
                }
                
                // DRO Panel (Display Readout)
                Rectangle {
                    background: #ecf0f1;
                    VerticalBox {
                        padding: 10px;
                        spacing: 8px;
                        
                        Text {
                            text: "Position (Work)";
                            font-weight: 700;
                            font-size: 14px;
                        }
                        
                        HorizontalBox {
                            Text { text: "X:"; width: 30px; }
                            LineEdit {
                                read-only: true;
                                text: "0.000";
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "Y:"; width: 30px; }
                            LineEdit {
                                read-only: true;
                                text: "0.000";
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "Z:"; width: 30px; }
                            LineEdit {
                                read-only: true;
                                text: "0.000";
                            }
                        }
                    }
                }
                
                // Control Buttons
                Rectangle {
                    background: #ecf0f1;
                    VerticalBox {
                        padding: 10px;
                        spacing: 8px;
                        
                        Button {
                            text: "Start";
                        }
                        Button {
                            text: "Pause";
                        }
                        Button {
                            text: "Stop";
                        }
                        Button {
                            text: "Reset";
                        }
                    }
                }
            }
            
            // Center panel - File and Viewer
            VerticalBox {
                spacing: 10px;
                
                // File Operations
                Rectangle {
                    background: #ecf0f1;
                    height: 50px;
                    
                    HorizontalBox {
                        padding: 10px;
                        spacing: 5px;
                        
                        Button {
                            text: "Open File";
                        }
                        Button {
                            text: "Save";
                        }
                        Text {
                            text: "Ready";
                            color: green;
                        }
                    }
                }
                
                // G-Code Viewer
                Rectangle {
                    background: white;
                    ScrollView {
                        TextEdit {
                            read-only: true;
                            text: "; G-Code viewer\nG00 X10 Y10\nG01 Z-5 F100\nG00 Z5\n";
                        }
                    }
                }
                
                // Console Output
                Rectangle {
                    background: #2c3e50;
                    height: 100px;
                    
                    ScrollView {
                        TextEdit {
                            read-only: true;
                            text: "[INFO] GCodeKit4 initialized\n[INFO] Ready for operation\n";
                        }
                    }
                }
            }
            
            // Right panel - Jog and Overrides
            VerticalBox {
                width: 250px;
                spacing: 10px;
                
                // Jog Controller
                Rectangle {
                    background: #ecf0f1;
                    VerticalBox {
                        padding: 10px;
                        spacing: 5px;
                        
                        Text {
                            text: "Jog";
                            font-weight: 700;
                            font-size: 14px;
                        }
                        
                        HorizontalBox {
                            Button { text: "←"; width: 25%; }
                            Button { text: "↑"; width: 25%; }
                            Button { text: "→"; width: 25%; }
                            Button { text: "↓"; width: 25%; }
                        }
                        
                        HorizontalBox {
                            Text { text: "Step:"; width: 50px; }
                            LineEdit {
                                text: "1.00";
                            }
                        }
                    }
                }
                
                // Overrides
                Rectangle {
                    background: #ecf0f1;
                    VerticalBox {
                        padding: 10px;
                        spacing: 8px;
                        
                        Text {
                            text: "Overrides";
                            font-weight: 700;
                            font-size: 14px;
                        }
                        
                        HorizontalBox {
                            Text { text: "Feed:"; width: 50px; }
                            SpinBox {
                                value: 100;
                                minimum: 0;
                                maximum: 200;
                            }
                            Text { text: "%"; }
                        }
                        
                        HorizontalBox {
                            Text { text: "Spindle:"; width: 50px; }
                            SpinBox {
                                value: 100;
                                minimum: 0;
                                maximum: 200;
                            }
                            Text { text: "%"; }
                        }
                    }
                }
            }
        }
        
        // Status Panel
        Rectangle {
            height: 80px;
            background: #2c3e50;
            
            HorizontalBox {
                padding: 10px;
                spacing: 20px;
                
                // Connection Status
                VerticalBox {
                    width: 200px;
                    spacing: 3px;
                    Text {
                        text: "Connection";
                        color: white;
                        font-weight: 700;
                        font-size: 12px;
                    }
                    Text {
                        text: root.connection-status;
                        color: root.connected ? #2ecc71 : #e74c3c;
                        font-size: 13px;
                        font-weight: 600;
                    }
                    Text {
                        text: root.selected-port;
                        color: #bdc3c7;
                        font-size: 11px;
                    }
                }
                
                // Device Version
                VerticalBox {
                    width: 200px;
                    spacing: 3px;
                    Text {
                        text: "Device";
                        color: white;
                        font-weight: 700;
                        font-size: 12px;
                    }
                    Text {
                        text: root.device-version;
                        color: root.connected ? #2ecc71 : #95a5a6;
                        font-size: 13px;
                        font-weight: 600;
                    }
                    Text {
                        text: root.machine-state;
                        color: root.connected ? #3498db : #bdc3c7;
                        font-size: 11px;
                    }
                }
                
                // Position (X, Y, Z)
                VerticalBox {
                    width: 300px;
                    spacing: 3px;
                    Text {
                        text: "Position (mm)";
                        color: white;
                        font-weight: 700;
                        font-size: 12px;
                    }
                    HorizontalBox {
                        spacing: 15px;
                        Text {
                            text: "X: " + round(root.position-x * 1000.0) / 1000.0;
                            color: #3498db;
                            font-size: 12px;
                            font-family: "Monospace";
                        }
                        Text {
                            text: "Y: " + round(root.position-y * 1000.0) / 1000.0;
                            color: #2ecc71;
                            font-size: 12px;
                            font-family: "Monospace";
                        }
                        Text {
                            text: "Z: " + round(root.position-z * 1000.0) / 1000.0;
                            color: #f39c12;
                            font-size: 12px;
                            font-family: "Monospace";
                        }
                    }
                    Text {
                        text: root.connected ? "Live" : "Offline";
                        color: root.connected ? #2ecc71 : #95a5a6;
                        font-size: 11px;
                    }
                }
                
                Rectangle { }  // Spacer
            }
        }
    }
}
